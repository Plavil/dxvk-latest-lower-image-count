#!/bin/bash

export WINEDEBUG=-all

dlls_dir=`dirname $(readlink -f $0)`
build_arch='@arch@'

if [ ! -f "$dlls_dir/d3d11.dll" ] || [ ! -f "$dlls_dir/dxgi.dll" ]; then
    echo "d3d11.dll or dxgi.dll not found in $dlls_dir" >&2
    exit 1
fi

if [ $build_arch == "x86_64" ]; then
    wine=wine64
else
    wine=wine
fi

quite=false
assume=

function ask {
    echo "$1"
    if [ -z "$assume" ]; then
        read continue
    else
        continue=$assume
        echo "$continue"
    fi
}

POSITIONAL=()
while [[ $# -gt 0 ]]; do

    case $1 in
    -y)
        assume='y'
        shift
        ;;
    -n)
        assume='n'
        shift
        ;;
    -q|--quiet)
        quiet=true
        assume=${assume:-'y'}
        shift 
        ;;
    *)
        POSITIONAL+=("$1")
        shift
        ;;
    esac
done
set -- "${POSITIONAL[@]}"

if [ "$quiet" = true ]; then
    exec >/dev/null
fi

if [ -z "$WINEPREFIX" ]; then
    ask "WINEPREFIX is not set, continue? (y/N)"
    if [ "$continue" != "y" ] && [ "$continue" != "Y" ]; then
    exit 1
    fi
else
    if ! [ -f "$WINEPREFIX/system.reg" ]; then
        ask "WINEPREFIX does not point to an existing wine installation. Proceeding will create a new one, continue? (y/N)"
        if [ "$continue" != "y" ] && [ "$continue" != "Y" ]; then
        exit 1
        fi
    fi
fi
unix_sys_path="$($wine winepath -u 'C:\windows\system32')"

ret=0

function removeOverride {
    echo -n '    [1/2] Removing override... '
    wine reg add 'HKEY_CURRENT_USER\Software\Wine\DllOverrides' /v $1 /d builtin /f
    if [ ! $? ]; then
        exit 1
    fi
    local dll="$unix_sys_path/$1.dll"
    echo -n '    [2/2] Removing link... '
    if [ -h "$dll" ]; then
        rm "$dll"
        if [ "$?" == "0" ]; then
            echo "Done."
        else
            ret=2
        fi
    else
        echo "'$dll' is not a link or doesn't exist."
        ret=2
    fi
}

function checkOverride {
    echo -n '    [1/2] Checking override... '
    local ovr="$(wine reg query 'HKEY_CURRENT_USER\Software\Wine\DllOverrides' /v $1)"
    if [ ! $? ]; then
        exit 1
    fi
    if [[ $ovr == *native* ]] && ! [[ $ovr == *builtin,native* ]]; then
        echo -e '\e[1;32mOK\e[0m.'
    else
        echo -e '\e[1;31mnot set\e[0m.'
        ret=2
    fi
    echo -n "    [2/2] Checking link to $1.dll... "
    if [ "$(readlink -f "$unix_sys_path/$1.dll")" == "$(readlink -f "$dlls_dir/$1.dll")" ]; then
        echo -e '\e[1;32mOK\e[0m.'
    else
        echo -e '\e[1;31mnot set\e[0m.'
        ret=2
    fi
}

function createOverride {
    echo -n '    [1/2] Creating override... '
    wine reg add 'HKEY_CURRENT_USER\Software\Wine\DllOverrides' /v $1 /d native /f
    if [ ! $? ]; then
        exit 1
    fi
    echo -n "    [2/2] Creating link to $1.dll... "
    ln -sf "$dlls_dir/$1.dll" "$unix_sys_path/$1.dll"
    if [ $? ]; then
        echo "Done."
    else
        ret=2
    fi
}

case "$1" in
reset)
    fun=removeOverride
    ;;
check)
    fun=checkOverride
    ;;
'')
    fun=createOverride
    ;;
*)
    echo "Unrecognized option: $1"
    echo "Usage: $0 [reset|check] [-q|--quite] [-y|-n]"
    exit 1
    ;;
esac

echo '[1/2] d3d11:'
$fun d3d11
echo '[2/2] dxgi:'
$fun dxgi
exit $ret
